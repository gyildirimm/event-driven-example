// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockService.Persistence.Contexts;

#nullable disable

namespace StockService.Persistence.Migrations
{
    [DbContext(typeof(StockContext))]
    [Migration("20250905184444_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockService.Domain.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When the stock entry was created");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasComment("The product identifier for this stock entry");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasComment("Total quantity of the product in stock");

                    b.Property<int>("ReservedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("Quantity reserved for pending orders");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When the stock entry was last updated");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Stocks_CreatedAt");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasDatabaseName("IX_Stocks_ProductId");

                    b.HasIndex("ProductId", "Quantity")
                        .HasDatabaseName("IX_Stocks_ProductId_Quantity");

                    b.ToTable("Stocks", "stock");
                });
#pragma warning restore 612, 618
        }
    }
}
